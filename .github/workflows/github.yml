name: policy-translation-point

on:
  push:
    branches:
      - master

jobs:

  # Build and test the applications with multiple Java versions
  build-and-test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [
          '11.0.x',
        ]

    env:
      DB_DATABASE: sifis_ptp
      DB_USER: root
      DB_PASSWORD: root

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          architecture: x64
          distribution: 'zulu'
          cache: 'maven'

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD}} 
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD}}  -e schema.sql

      - name: Package ACE entities
        run: |
          ./scripts/build-ptp.sh

      - name: Generate Jacoco Badge
        if: ${{ matrix.java-version == '11.0.x' }}
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: coverage/target/site/jacoco-aggregate/jacoco.csv

      - name: Log coverage percentage
        if: ${{ matrix.java-version == '11.0.x' }}
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"

      - name: Move the badge to jacoco folder
        if: ${{ matrix.java-version == '11.0.x' }}
        run: |
          mv .github/badges/*.svg coverage/target/site/jacoco-aggregate/

      - name: Deploy Jacoco code coverage reports to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4
        if: ${{ matrix.java-version == '11.0.x' }}
        with:
          clean: true
          folder: coverage/target/site/jacoco-aggregate
          target-folder: reports
          branch: gh-pages

  
  # Build files necessary for building Docker Images (Dockerfiles and Contexts)
  # build-for-docker:

  #   runs-on: ubuntu-latest

  #   steps:
    
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-java@v3
  #       with:
  #         java-version: 8.0.x
  #         architecture: x64
  #         distribution: 'zulu'
  #         cache: 'maven'
          
  #     - name: Prepare Dockerfiles and files for Contexts
  #       run: |
  #         ./scripts/build-for-docker.sh
             
  #     - name: Upload artifacts for Docker Image building
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: files-for-docker
  #         retention-days: 5
  #         if-no-files-found: error
  #         path: |
  #           ./docker-build/*  

  # # Build multiarch Docker Images and push as GitHub Packages
  # docker-image-push:

  #   if: ${{ github.repository == 'sifis-home/ace-entities' }}
  #   needs: [build-and-test, build-for-docker]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Download artifacts for Docker Image building
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: files-for-docker

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to GitHub container registry (ghcr.io)
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and push image (Authorization Server)
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ace-entities/.
  #         file: ace-entities/Dockerfile-AceAS
  #         platforms: linux/amd64, linux/arm64, linux/arm
  #         push: true
  #         tags: ghcr.io/sifis-home/ace-authorization-server:latest
  #         outputs: type=registry, annotation-index.org.opencontainers.image.description=ace-entities - ACE Authorization Server (includes revoked token notification and UCS). Configured with DHT logging enabled.

  #     - name: Build and push image (Resource Server)
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ace-entities/.
  #         file: ace-entities/Dockerfile-AceRS
  #         platforms: linux/amd64, linux/arm64, linux/arm
  #         push: true
  #         tags: ghcr.io/sifis-home/ace-resource-server:latest
  #         outputs: type=registry, annotation-index.org.opencontainers.image.description=ace-entities - ACE Resource Server. Configured with CoAP Observe option enabled for the /trl endpoint.

  #     - name: Build and push image (Client)
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ace-entities/.
  #         file: ace-entities/Dockerfile-AceClient
  #         platforms: linux/amd64, linux/arm64, linux/arm
  #         push: true
  #         tags: ghcr.io/sifis-home/ace-client:latest
  #         outputs: type=registry, annotation-index.org.opencontainers.image.description=ace-entities - ACE Client. Configured with CoAP Observe option enabled for the /trl endpoint.

  #     - name: Build and push image (Client DHT)
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ace-entities/.
  #         file: ace-entities/Dockerfile-AceClientDht
  #         platforms: linux/amd64, linux/arm64, linux/arm
  #         push: true
  #         tags: ghcr.io/sifis-home/ace-client-dht:latest
  #         outputs: type=registry, annotation-index.org.opencontainers.image.description=ace-entities - ACE Client DHT. Configured with CoAP Observe option enabled for the /trl endpoint; configured with DHT connection enabled.
